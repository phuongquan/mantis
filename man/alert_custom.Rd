% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/alert.R
\name{alert_custom}
\alias{alert_custom}
\title{Create a custom alert rule}
\usage{
alert_custom(short_name, description, function_call, items = "[ALL]")
}
\arguments{
\item{short_name}{short name to uniquely identify the rule. Only include alphanumeric, '-', and
'_' characters.}

\item{description}{short description of what the rule checks for}

\item{function_call}{call to be evaluated per item, that returns either `TRUE` or `FALSE`. Return
value of `TRUE` means alert result is "FAIL". See Details.}

\item{items}{vector of values in item_col that the rule should be applied to. Or "[ALL]" to apply
  it to all items.

  The supplied `function_call` is passed to `eval()` within a `dplyr::summarise()` after grouping
  by the `item_col` and ordering by the `timepoint_col`. Column names that can be used explicitly
  in the expression are: `value`, `item`, `timepoint`; and which refer to the values in the
  `value_col`, `item_col`, `timepoint_col` columns of the data respectively}
}
\value{
An `alert_rule` object
}
\description{
Create a custom alert rule
}
\examples{
ars <- alert_rules(
  alert_custom(
    short_name = "my_rule_combo",
    description = "Over 3 missing values and max value is > 10",
    function_call = quote(sum(is.na(value)) > 3 && max(value, na.rm = TRUE) > 10)
  ),
  alert_custom(
    short_name = "my_rule_doubled",
    description = "Last value is over double the first value",
    function_call = quote(rev(value)[1] > 2*value[1])
  )
)
}
